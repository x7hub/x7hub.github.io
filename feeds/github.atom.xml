<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>x7's blog</title><link href="http://x7hub.github.io/" rel="alternate"></link><link href="http://x7hub.github.io/feeds/github.atom.xml" rel="self"></link><id>http://x7hub.github.io/</id><updated>2013-12-04T00:00:00+08:00</updated><entry><title>用Pelican构建博客上传到Github Pages出错</title><link href="http://x7hub.github.io/pages/page_build_failed.html" rel="alternate"></link><updated>2013-12-04T00:00:00+08:00</updated><author><name>x7</name></author><id>tag:x7hub.github.io,2013-12-04:pages/page_build_failed.html</id><summary type="html">&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href="https://help.github.com/articles/using-submodules-with-pages"&gt;Using submodules with Pages&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;出错情况&lt;/h3&gt;
&lt;p&gt;上次写完博客，上传Github的时候突然出问题了，现在当然已经修复。&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;pelican&lt;/code&gt;和&lt;code&gt;markdown&lt;/code&gt;本地编译成功，但是用&lt;code&gt;git&lt;/code&gt;提交到&lt;code&gt;Github&lt;/code&gt;时，收到了这么一封邮件，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;From:  GitHub (noreply@github.com) This sender is in your safe list.&lt;/p&gt;
&lt;p&gt;Sent:  Saturday, November 30, 2013 1:06:57 PM&lt;/p&gt;
&lt;p&gt;To:    x7hub (x7.0@outlook.com)&lt;/p&gt;
&lt;p&gt;The page build failed with the following error:&lt;/p&gt;
&lt;p&gt;page build failed&lt;/p&gt;
&lt;p&gt;For information on troubleshooting Jekyll see:&lt;/p&gt;
&lt;p&gt;https://help.github.com/articles/using-jekyll-with-pages#troubleshooting&lt;/p&gt;
&lt;p&gt;If you have any questions please contact us at https://github.com/contact.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;错误信息就只有&lt;code&gt;page build failed&lt;/code&gt;，给出的帮助链接指向的是&lt;code&gt;Jekyll&lt;/code&gt;，我用的是&lt;code&gt;Pelican&lt;/code&gt;啊，很苦恼啊。于是尝试了删除新添加的博文，尝试了回退到之前的版本，尝试更新系统软件，都不起作用，每次提交都会收到上面那封邮件。无奈之下求助邮件中的第二个链接，就是&lt;a href="https://github.com/contact"&gt;Github的帮助&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;求助Github&lt;/h3&gt;
&lt;p&gt;帮助页面写着，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We’re here to help with any questions or comments. If you just want to say hi, that's cool too.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单说明了问题以后，几分钟内就收到了答复邮件，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sorry about this. We are currently working on improving these error messages.&lt;/p&gt;
&lt;p&gt;The actual error found in the page build logs is as follows:&lt;/p&gt;
&lt;p&gt;No submodule mapping found in .gitmodules for path 'pelican-plugins'&lt;/p&gt;
&lt;p&gt;Please take a look at our Help article on using Git submodules with GitHub Pages:&lt;/p&gt;
&lt;p&gt;https://help.github.com/articles/using-submodules-with-pages&lt;/p&gt;
&lt;p&gt;That should help you sort out the issue.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;No submodule mapping found in .gitmodules for path 'pelican-plugins'&lt;/code&gt;这个就是问题所在了。因为我的博客目录下有&lt;code&gt;pelican-plugins&lt;/code&gt;和&lt;code&gt;pelican-themes&lt;/code&gt;两个submodule，之前也没有在&lt;code&gt;.gitmodules&lt;/code&gt;中声明，现在他们不认了。&lt;/p&gt;
&lt;p&gt;自己也不会写&lt;code&gt;.gitmodules&lt;/code&gt;，所以还是交给&lt;code&gt;git&lt;/code&gt;自动添加吧，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rm -rf pelican-plugins
rm -rf pelican-themes
ga . -A
gc -m &lt;span class="s2"&gt;&amp;quot;remove 2 submodule dirs &amp;quot;&lt;/span&gt;
git submodule add  https://github.com/getpelican/pelican-plugins pelican-plugins
git submodule add  https://github.com/getpelican/pelican-themes pelican-themes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;现在&lt;code&gt;.gitmodules&lt;/code&gt;是这样的了，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[submodule &amp;quot;pelican-plugins&amp;quot;]&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;pelican-plugins&lt;/span&gt;
&lt;span class="s"&gt;    url = https://github.com/getpelican/pelican-plugins&lt;/span&gt;
&lt;span class="k"&gt;[submodule &amp;quot;pelican-themes&amp;quot;]&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;pelican-themes&lt;/span&gt;
&lt;span class="s"&gt;    url = https://github.com/getpelican/pelican-themes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再次提交，没有收到报错的邮件，很快就在页面上看到更新了。&lt;/p&gt;</summary><category term="github"></category><category term="pelican"></category></entry><entry><title>在Github Pages上搭建个人博客</title><link href="http://x7hub.github.io/pages/build_my_blog.html" rel="alternate"></link><updated>2013-08-27T00:00:00+08:00</updated><author><name>x7</name></author><id>tag:x7hub.github.io,2013-08-27:pages/build_my_blog.html</id><summary type="html">&lt;p&gt;参考:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.lizherui.com/pages/2013/08/17/build_blog.html"&gt;一步一步打造Geek风格的技术博客 by lizherui&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://x-wei.github.io/pelican_github_blog.html"&gt;用pelican在github上创建自己的博客! by mx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.linuxzen.com/shi-yong-pelicanda-zao-jing-tai-bo-ke.html"&gt;使用Pelican打造静态博客 by cold&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;搭建环境&lt;/h3&gt;
&lt;p&gt;在Linux环境下搭建，我使用的是Archlinux i686，使用其它发行版过程基本相同。&lt;/p&gt;
&lt;h3&gt;Github Pages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;注册Github,注册和配置SSH密钥过程&lt;a href="http://help.github.com/articles/set-up-git"&gt;help page&lt;/a&gt;写得很清楚。&lt;/li&gt;
&lt;li&gt;在Github创建一个名为username.github.io的版本库（将username替换成自己的Github账户名）。&lt;/li&gt;
&lt;li&gt;Setting -&amp;gt; Automatic page generator -&amp;gt; Continue to layout，选择一个模板，并发布。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这时在username.github.io页面就已经生成了一个页面。&lt;/p&gt;
&lt;h3&gt;本地搭建&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;安装pelican和markdown：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yaourt pelican
yaourt markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;搭建目录：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir blog
&lt;span class="nb"&gt;cd &lt;/span&gt;blog
pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;生成的目录结构:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;blog/
├── content
│   └── *.md             &lt;span class="c"&gt;# markdown文件&lt;/span&gt;
├── output               &lt;span class="c"&gt;# 默认的输出目录&lt;/span&gt;
├── develop_server.sh
├── Makefile
├── pelicanconf.py       &lt;span class="c"&gt;# 主配置文件&lt;/span&gt;
└── publishconf.py
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;clone之前生成的username.github.io版本库：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone git@github.com:username/username.github.io.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;为了直接向Github的username.github.io库中提交本地生成的文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mv username.github.io/.git .
rm -rf username.github.io
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样就可以将整个blog目录托管在github上。&lt;/p&gt;
&lt;h3&gt;修改配置文件&lt;/h3&gt;
&lt;h4&gt;配置Makefile&lt;/h4&gt;
&lt;p&gt;修改默认的&lt;code&gt;$OUTPUTDIR&lt;/code&gt;值，使之指向博客根目录而不是output目录，这是因为生成的index.html必须位于github托管目录的根目录，才能访问到网页。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;OUTPUTDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;BASEDIR&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改&lt;code&gt;publish&lt;/code&gt;项的值，不必需要提供默认输出目录，另外指定pelidanconf.py为配置文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;publish&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;PELICAN&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;INPUTDIR&lt;span class="k"&gt;)&lt;/span&gt; -s &lt;span class="k"&gt;$(&lt;/span&gt;CONFFILE&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;PELICANOPTS&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;添加&lt;code&gt;github&lt;/code&gt;项，方便直接向github提交修改：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;github&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;publish&lt;/span&gt;
    &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt;; git add .; git commit -am &lt;span class="s1"&gt;&amp;#39;zzz&amp;#39;&lt;/span&gt;; git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;另外可以删除掉不必要的项。&lt;/p&gt;
&lt;h4&gt;配置pelicanconf.py&lt;/h4&gt;
&lt;p&gt;修改&lt;code&gt;AUTHOR&lt;/code&gt;，&lt;code&gt;SITENAME&lt;/code&gt;，&lt;code&gt;TIMEZONE&lt;/code&gt;，&lt;code&gt;DEFAULT_LANG&lt;/code&gt;，&lt;code&gt;GITHUB_URL&lt;/code&gt;，&lt;code&gt;LINKS&lt;/code&gt;，&lt;code&gt;SOCIAL&lt;/code&gt;等选项：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;x7&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;x7&lt;/span&gt;&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;s &lt;/span&gt;
&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Beijing&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;zhs&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;GITHUB_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;lt;https://github.com/x7hub&amp;gt;&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Pelican&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://getpelican.com/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ArchWiki&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://wiki.archlinux.org/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;新浪微博&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://weibo.com/ulzzz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;指定默认输出目录：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;OUTPUT_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;写博文&lt;/h3&gt;
&lt;p&gt;需要编辑的md文件应该位于content目录下，我暂时使用的编辑器是ReText，另外有一个在线的编辑器&lt;a href="http://mahua.jser.me"&gt;MaHua&lt;/a&gt;，还没尝试其他。&lt;/p&gt;
&lt;p&gt;pelican要求文章的开头必须有一些字段，如&lt;code&gt;Title&lt;/code&gt;等，比如本文的开头是这样的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;
&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;在&lt;/span&gt;&lt;span class="n"&gt;Github&lt;/span&gt; &lt;span class="n"&gt;Pages&lt;/span&gt;&lt;span class="err"&gt;上搭建个人博客&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;build_my_blog&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;编辑完成后，利用&lt;code&gt;make pulish&lt;/code&gt;生成博文，还可以通过&lt;code&gt;make serve&lt;/code&gt;在localhost:8000可以生成预览，如果完成了之前对Makefile的修改，就可以用&lt;code&gt;make github&lt;/code&gt;直接提交到Github。&lt;/p&gt;
&lt;h3&gt;主题&lt;/h3&gt;
&lt;p&gt;生成的博文好丑！&lt;/p&gt;
&lt;p&gt;安装主题：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yaourt pelican-themes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;不是archlinux系统的话就这样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/getpelican/pelican-themes.git
&lt;span class="nb"&gt;cd &lt;/span&gt;pelican-themes
pelican-themes -i tuxlite_tbs
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中tuxlite_tbs是选择使用的主题，&lt;a href="http://github.com/getpelican/pelican-themes"&gt;pelican主题的Github目录&lt;/a&gt;下几乎每个都提供了预览.&lt;/p&gt;
&lt;p&gt;然后，在配置文件&lt;code&gt;pelicanconf.py&lt;/code&gt;中添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;tuxlite_tbs&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重新make，就生成了带有选定主题的页面。&lt;/p&gt;
&lt;h3&gt;评论系统&lt;/h3&gt;
&lt;p&gt;使用&lt;a href="http://disqus.com/"&gt;Disqus&lt;/a&gt;作为评论系统，注册帐号后直接在pelicanconf.conf中添加:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;your_shortname&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;站长工具&lt;/h3&gt;
&lt;p&gt;使用&lt;a href="http://www.google.com/webmasters/‎"&gt;google webmaster tools&lt;/a&gt;，申请之后会提示需要&lt;code&gt;sitemap&lt;/code&gt;，于是需要用&lt;code&gt;pelican&lt;/code&gt;的&lt;code&gt;sitemap&lt;/code&gt;插件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/getpelican/pelican-plugins
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再在&lt;code&gt;pelicanconf.py&lt;/code&gt;中加入：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;PLUGIN_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;pelican-plugins&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sitemap&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;## 配置sitemap 插件&lt;/span&gt;
&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;format&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;priorities&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;indexes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;pages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;changefreqs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;daily&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;indexes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;monthly&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;pages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;monthly&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;To be continued&lt;/h3&gt;
&lt;p&gt;暂时就这样～ 当然还有好多东西要做，Analytics、Webmaster等等。。。&lt;/p&gt;</summary><category term="blog"></category><category term="github"></category><category term="pelican"></category></entry></feed>